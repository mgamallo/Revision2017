import java.awt.AWTException;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

public class InterfazIntroducirNHC extends javax.swing.JDialog {

    /**
     * Creates new form IntroduceNHC
     */
	
	JButton botonOrigen;
	
    public InterfazIntroducirNHC(Frame parent, boolean modal, JButton botonOrigen) {
    	// super(parent, modal);
    	this.botonOrigen = botonOrigen;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

    	setTitle("IntroducirNHC");
    	
        jLNumero = new javax.swing.JLabel();
        jTFnhc = new javax.swing.JTextField(8);
        jBAceptar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLIcono = new javax.swing.JLabel();
        
        jBNHCAnterior = new javax.swing.JButton();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(false);
        setPreferredSize(new java.awt.Dimension(400, 120));
        setResizable(false);
        setLocationRelativeTo(botonOrigen);
        // setLocation(1000, 10);
        // setLocationRelativeTo(Inicio.jBNHC);
         
        if(Inicio.menuVertical){
        	Rectangle rectangulo = Inicio.ventanaMicro.getBounds();
        	setLocation(rectangulo.x + 150,rectangulo.y+10);
        }
        
        setAlwaysOnTop(true);

        jLNumero.setText("Introduce el NHC");

        jTFnhc.setEditable(false);
        jTFnhc.setFocusable(false);
        jTFnhc.setBackground(new java.awt.Color(254, 254, 195));
        jTFnhc.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTFnhc.addKeyListener(new KeyAdapter(){
           public void keyTyped(KeyEvent e)
           {
              char caracter = e.getKeyChar();

              // Verificar si la tecla pulsada no es un digito
              if(((caracter < '0') || (caracter > '9')) && (caracter != '\b' /*corresponde a BACK_SPACE*/ || (caracter != '\n')))
              	{
            	  	e.consume();  // ignorar el evento de teclado
              	}
              
           }
        });
        //	Si pulsamos enter en el campo de texto
        jTFnhc.addActionListener(new ActionListener(){
        	public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
        		validarNHC(jTFnhc.getText());
   
        		Inicio.listaDocumentos[Inicio.numeroPdf].semaforoAmarilloNhc = false;
           	 	Inicio.jBNHC.setBackground(Color.green);
				Inicio.jBNHCp.setBackground(Color.green);
	     		new FocalAdobe(100);
				if(Inicio.A3){
					try {
						Robot robot = new Robot();
						robot.delay(50);
						robot.keyPress(KeyEvent.VK_RIGHT);
						robot.keyRelease(KeyEvent.VK_RIGHT);
						robot.delay(50);
					} catch (AWTException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				dispose();
			}
        });

        jBAceptar.setText("Aceptar");
        jBAceptar.setFont(new java.awt.Font("Serif", 1, 20));
        jBAceptar.addActionListener (new ActionListener(){
            public void actionPerformed (ActionEvent e)
            {
            	aceptar();
            }
          });
             

        jBCancelar.setText("Cancelar");
        jBCancelar.setFont(new java.awt.Font("Serif", 1, 20));
        jBCancelar.addActionListener (new ActionListener(){
            public void actionPerformed (ActionEvent e)
            {
            	new FocalAdobe(100);
            	dispose();
            }
          });
        
        //	Boton numero de historia anterior
        
        jBNHCAnterior.setFont(new java.awt.Font("Serif", 1, 28));
        
        if(Inicio.numeroPdf > 0){
            String nhcAnterior = Inicio.listaDocumentos[Inicio.numeroPdf-1].nhc;
            jBNHCAnterior.setText(nhcAnterior);
            jBNHCAnterior.setBackground(Color.green);
        }
        else{
        	jBNHCAnterior.setText("X");
        }
        jBNHCAnterior.addActionListener (new ActionListener(){
            public void actionPerformed (ActionEvent e)
            {
            	validarNHC(jBNHCAnterior.getText());
            	new FocalAdobe(100);
            	dispose();
            }
          });
        

 //       jLIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Pluma64x64.png"))); // NOI18N

        
        JPanel panel = new JPanel();
        JPanel panelN = new JPanel();
        JPanel panelC = new JPanel();
        JPanel panelS = new JPanel();
        
        panelN.setBackground(Color.red);
        panelS.setBackground(Color.red);
        
        panel.setLayout(new BorderLayout());
        //panelN.add(jLNumero);
        //panelC.add(jTFnhc);
        panelN.add(jTFnhc);
        panel.add(panelN,BorderLayout.NORTH);
        //panel.add(panelC, BorderLayout.CENTER);
        panelS.add(jBNHCAnterior);
        panelS.add(jBAceptar);
        panelS.add(jBCancelar);
        panel.add(panelS,BorderLayout.SOUTH);
        
        this.getContentPane().add(panel);
                               
        KeyListener listener = new KeyListener() {
      		@Override
      		public void keyTyped(KeyEvent e) {
      			// System.out.println("keyTyped="+KeyEvent.getKeyText(e.getKeyCode()));
      		}

      		@Override
      		public void keyPressed(KeyEvent e) {
      			// System.out.println("keyPressed="+KeyEvent.getKeyText(e.getKeyCode()));
      		}

      		@Override
      		public void keyReleased(KeyEvent e) {
      			
      			switch (e.getKeyCode()){
      			case KeyEvent.VK_SPACE:  
      				validarNHC(jBNHCAnterior.getText());
      				new FocalAdobe(200);
      				dispose();
      				break;
      				
      			case KeyEvent.VK_0:
      			case KeyEvent.VK_1:
      			case KeyEvent.VK_2:
      			case KeyEvent.VK_3:
      			case KeyEvent.VK_4:
      			case KeyEvent.VK_5:
      			case KeyEvent.VK_6:
      			case KeyEvent.VK_7:
      			case KeyEvent.VK_8:
      			case KeyEvent.VK_9:
      				
      			/*	if(Inicio.ventanaIntroducirNHC.isVisible()){                        */
        				String cadena = Inicio.ventanaIntroducirNHC.jTFnhc.getText();
          				cadena += e.getKeyText(e.getKeyCode());
          				Inicio.ventanaIntroducirNHC.jTFnhc.setText(cadena);
      			/*	}
      				else{
      					String cadena = Inicio.ventanaExtraer.campoNHC.getText();
          				cadena += e.getKeyText(e.getKeyCode());
          				Inicio.ventanaExtraer.campoNHC.setText(cadena);
      				}
     			*/	
      				break;
      				
      			case KeyEvent.VK_NUMPAD0:
      			case KeyEvent.VK_NUMPAD1:
      			case KeyEvent.VK_NUMPAD2:
      			case KeyEvent.VK_NUMPAD3:
      			case KeyEvent.VK_NUMPAD4:
      			case KeyEvent.VK_NUMPAD5:
      			case KeyEvent.VK_NUMPAD6:
      			case KeyEvent.VK_NUMPAD7:
      			case KeyEvent.VK_NUMPAD8:
      			case KeyEvent.VK_NUMPAD9:
      				
      			/*	if(Inicio.ventanaIntroducirNHC.isVisible()){   */
      					
        				String cadenaBloqNum = Inicio.ventanaIntroducirNHC.jTFnhc.getText();
        				String cadenaExtraida = e.getKeyText(e.getKeyCode());
        				cadenaBloqNum += cadenaExtraida.substring(7);
          				Inicio.ventanaIntroducirNHC.jTFnhc.setText(cadenaBloqNum);
      			/*	}
      				else{
      					System.out.println("Imprime en la ventanaextraer");
      					String cadenaBloqNum = Inicio.ventanaExtraer.campoNHC.getText();
      					String cadenaExtraida = e.getKeyText(e.getKeyCode());
        				cadenaBloqNum += cadenaExtraida.substring(7);
          				Inicio.ventanaExtraer.campoNHC.setText(cadenaBloqNum);
      				}
				*/
      				break;	
      				
      				
      				
      				
      			case KeyEvent.VK_R:
      				System.out.println("Vamos a rotar pagina");
    				new Acrobat().rotarPagina();
    				/*
    				if ((Inicio.jBServicio.getText().equals("CAR") || Inicio.jBServicio
    						.getText().equals("ANR"))
    						&& Inicio.jBNombreDoc.getText().equals("X")) {
    					// if(Inicio.listaDocumentos[Inicio.numeroPdf].fisica.numPaginas
    					// <= 2){
    					Inicio.jBNombreDocp.setText("EKG");
    					Inicio.jBNombreDoc.setText("EKG");
    					Inicio.jBServiciop.setText("CAR");
    					Inicio.jBServicio.setText("CAR");
    					Inicio.jBNombreDocp.setBackground(Color.green);
    					Inicio.jBNombreDoc.setBackground(Color.green);
    					// }
    				}
    				*/
    				break;
    			case KeyEvent.VK_E:
    				new Acrobat().eliminarPagina();
    				break;      			
      			}
      			
      		//	if(e.getKeyCode() == KeyEvent.VK_A )
      				
      		//	 System.out.println("keyReleased="+KeyEvent.getKeyText(e.getKeyCode()));
      		}
      	};
        
        jTFnhc.addKeyListener(listener);
      	
 
        getAccessibleContext().setAccessibleParent(this);
  
        pack();
    }// </editor-fold>

    
    public void aceptar(){
    	validarNHC(jTFnhc.getText());
    	
    	Inicio.listaDocumentos[Inicio.numeroPdf].semaforoAmarilloNhc = false;
    	Inicio.jBNHC.setBackground(Color.green);
		Inicio.jBNHCp.setBackground(Color.green);
		
 		new FocalAdobe(100);
		if(Inicio.A3){
			try {
				Robot robot = new Robot();
				robot.delay(50);
				robot.keyPress(KeyEvent.VK_RIGHT);
				robot.keyRelease(KeyEvent.VK_RIGHT);
				robot.delay(50);
			} catch (AWTException ev) {
				// TODO Auto-generated catch block
				ev.printStackTrace();
			}
		}
    	dispose();
    }
    
	public void validarNHC(String jTFnhc) {
		// TODO Auto-generated method stub
		
		int auxM;
		int auxm;
		int aux;
		String numeroFormateado = "";
		
		if(!jTFnhc.equals("")){
			int nhc = Integer.parseInt(jTFnhc);
			if(nhc > 0 && nhc < 2999999){
				
				numeroFormateado = jTFnhc;
				
				/*
				auxM = nhc/1000000;
				auxm = nhc/1000;
				System.out.println("AuxM: " + auxM);
				System.out.println("Auxm: " + auxm);
				
				if(auxM>0){
					numeroFormateado = String.valueOf(auxM) + ".";
					aux = auxm - auxM*1000;
					if(aux <100 && aux >9){
						numeroFormateado += ("0" + String.valueOf(aux) + ".");
					}
					else if(aux < 10 && aux != 0){
						numeroFormateado += ("00" + String.valueOf(aux) + ".");
					}
					else if(aux == 0){
						numeroFormateado += ("000.");
					}
					else{
						numeroFormateado += String.valueOf(aux) + ".";
					}

					aux = nhc - auxm*1000;
					if(aux <100 && aux >9){
						numeroFormateado += ("0" + String.valueOf(aux));
					}
					else if(aux < 10 && aux != 0){
						numeroFormateado += ("00" + String.valueOf(aux));
					}
					else if(aux == 0){
						numeroFormateado += ("000");
					}
					else{
						numeroFormateado += String.valueOf(aux);
					}

				}else if(auxm>0){
					numeroFormateado = String.valueOf(auxm) + ".";
					aux = nhc - auxm*1000;
					if(aux <100 && aux >9){
						numeroFormateado += ("0" + String.valueOf(aux));
					}
					else if(aux < 10 && aux != 0){
						numeroFormateado += ("00" + String.valueOf(aux));
					}
					else if(aux == 0){
						numeroFormateado += ("000");
					}
					else{
						numeroFormateado += String.valueOf(aux);
					}
				}else{
					numeroFormateado = String.valueOf(nhc);
				}
				
				*/
		//		Inicio.jBNHC.setIcon(null);
		//		Inicio.jBNHCp.setIcon(null);	
				Inicio.jBNHC.setText(numeroFormateado);
				Inicio.jBNHCp.setText(numeroFormateado);
				Inicio.jBNHC.setBackground(new java.awt.Color(153,255,153));
				Inicio.jBNHCp.setBackground(new java.awt.Color(153,255,153));
				
				/*
				if(Inicio.menuVertical){
					Inicio.ventanaMicro.jBNHCm.setText(numeroFormateado);
					Inicio.ventanaMicro.jBNHCm.setBackground(new java.awt.Color(153,255,153));
				}
				 */
			}
		}

	}
    
    
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify
    private javax.swing.JButton jBAceptar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JLabel jLIcono;
    private javax.swing.JLabel jLNumero;
    public javax.swing.JTextField jTFnhc;
    
    public javax.swing.JButton jBNHCAnterior;
    // End of variables declaration
}