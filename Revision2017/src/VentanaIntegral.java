import java.awt.AWTException;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Robot;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;

import javax.swing.AbstractButton;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.ScrollPaneConstants;

public class VentanaIntegral extends javax.swing.JFrame {


	private JMenuItem jMenuVentanaA3;
	private JMenuItem jMenuSalir;
	private JButton jBAcrobat;

	/**
     * Creates new form VentanaIntegral
     */
    public VentanaIntegral() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollServicio = new javax.swing.JScrollPane();
        jScrollPdfs = new JScrollPane();
        jPanelSuper = new javax.swing.JPanel();
        Inicio.jBNHC = new javax.swing.JButton();
        Inicio.jBServicio = new javax.swing.JButton();
        Inicio.jBNombreDoc = new javax.swing.JButton();
        jPanelFijar = new javax.swing.JPanel();
        jBFijarServicio = new javax.swing.JButton();
        jBFijarNombres = new javax.swing.JButton();
        jPanelHosp = new javax.swing.JPanel();
        jBCons = new javax.swing.JButton();
        jBHosp = new javax.swing.JButton();
        jBCia = new javax.swing.JButton();
        jPanelExtraer = new javax.swing.JPanel();
        jB180 = new javax.swing.JButton();
        jBGiroDcha = new javax.swing.JButton();
        jBCarpeta = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBApartar = new javax.swing.JButton();
        jBExtraer = new javax.swing.JButton();
        jPanelRegistrar = new javax.swing.JPanel();

        jBAcrobat = new JButton("Acr");
        
        jBGrabar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jBAnr = new javax.swing.JButton();
        jBCar = new javax.swing.JButton();
        jPanelNombres = new javax.swing.JPanel();
        jScrollHab1 = new javax.swing.JScrollPane();
        jListHabituales1 = new javax.swing.JList();
        jScrollHab2 = new javax.swing.JScrollPane();
        jListHabituales2 = new javax.swing.JList();
        jScrollNombresDoc = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();

        
       	jBarraMenu = new javax.swing.JMenuBar();
    	jMenuRevisar = new javax.swing.JMenu("Revisar"); 
    	
    	jMenuVentanaHorizontal = new JMenuItem("Ventana Horizontal");
    	jMenuVentanaVertical = new JMenuItem("Ventana Vertical");
    	jMenuVentanaA3 = new JMenuItem("Ventana A3");
    	jMenuSalir = new JMenuItem("Salir");
    	
    	jMenuRevisar.add(jMenuVentanaHorizontal);
    	jMenuRevisar.add(jMenuVentanaVertical);
    	jMenuRevisar.add(jMenuVentanaA3);
    	jMenuRevisar.add(new JSeparator());
    	jMenuRevisar.add(jMenuSalir);
    	
        jMenuVentanaHorizontal.addActionListener(
        		new ActionListener(){
        			public void actionPerformed(ActionEvent evento){
        				//	Menú horizontal
        				Inicio.menuVertical = false;
        				Inicio.A3 = false;
        				Inicio.visualizacion = 0;
        				abrirCarpetaConVisualizacion(evento,0);
        			}
	        });
        
        
        jMenuVentanaVertical.addActionListener(
        		new ActionListener(){
        			public void actionPerformed(ActionEvent evento){
        				//	Menú vertical
        				Inicio.menuVertical = true;
        				Inicio.A3 = false;
        				Inicio.visualizacion = 1;
        				abrirCarpetaConVisualizacion(evento,1);
        			}
	        });
    	
        jMenuVentanaA3.addActionListener(
        		new ActionListener(){
        			public void actionPerformed(ActionEvent evento){
        				//	Menú A3
        				Inicio.menuVertical = true;
        				Inicio.A3 = true;
        				Inicio.visualizacion = 2;
        				abrirCarpetaConVisualizacion(evento,2);
        			}
	        });
        
        jMenuSalir.addActionListener(new ActionListener(){			//	Guardar preferencias
        	public void actionPerformed(ActionEvent evento){
        		if(Inicio.ventanaRevisionAbierta){
            	//	Inicio.coordenadas.grabarCoordenadas();
        		}

        		
        		CerrarTodo cerrar = new CerrarTodo();
        		cerrar.close();
        		System.exit(0);
        	}
        	
        });
            
        jMenuFirmar = new JMenu("Firmar");
        jMenuItemFirmar = new JMenuItem("Firmar");
        
        jMenuFirmar.add(jMenuItemFirmar);
        jMenuItemFirmar.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				
				
			try {
					
					String usuarioUrgencias = "documentacion";
					
					if(Inicio.destinoDocumentacion == 0){
						usuarioUrgencias = "urgencias";
					}
					
					String comando = "java -jar FirmaArchivo.jar " + Inicio.usuario 
							+ " " + usuarioUrgencias;
					
					Runtime.getRuntime().exec(comando);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			CerrarTodo cerrar = new CerrarTodo();
    		cerrar.close();
    		System.exit(0);
			
			//	new VentanaDialogo(Inicio.usuario, Inicio.documentacionDeUrgencias);
			}
			
		});
        
        
        jMenuAyuda = new JMenu("Ayuda");
        jAyudaServicio = new JMenuItem("Por Servicio");
        jAyudaPalabrasClave = new JMenuItem("Por palabras clave");
        jAyudaNombreDocumento = new JMenuItem("Por nombre del documento");
        
        
        
        jMenuAyuda.add(jAyudaServicio);
        jMenuAyuda.add(jAyudaPalabrasClave);
        jMenuAyuda.add(jAyudaNombreDocumento);
        
        jAyudaServicio.addActionListener(new ActionListener(){				//	Visor por Servicio
        	public void actionPerformed(ActionEvent arg0){
        		Inicio.ventanaExplorador.cerrarAutoHotKey();
        		 // cerrarAutoHotKey();
        		 new InterfazVisor();
        	}
        });
        
        jAyudaPalabrasClave.addActionListener(new ActionListener(){				//	Visor por Metadatos
        	public void actionPerformed(ActionEvent arg0){
        		Inicio.ventanaExplorador.cerrarAutoHotKey();
        		 new InterfazAyuda();
        	}
        });
        
        jAyudaNombreDocumento.addActionListener(new ActionListener(){				//	Visor por nombreDocumento
        	public void actionPerformed(ActionEvent arg0){
        		Inicio.ventanaExplorador.cerrarAutoHotKey();
        		 new InterfazVisorNomDoc();
        	}
        });
        
        jBarraMenu.add(jMenuRevisar);
        jBarraMenu.add(jMenuFirmar);
        jBarraMenu.add(jMenuAyuda);
        
        setJMenuBar(jBarraMenu);
        
        // Inicio.jBDeshabilitar.setFont(new java.awt.Font("Serif", 1, 10));
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Revisión");

        jPanel1.setPreferredSize(new java.awt.Dimension(360, 1150));
        jPanel1.addKeyListener(listener);

        DefaultListModel dLM = new DefaultListModel();
		dLM.removeAllElements();
		dLM = Inicio.excel.listaServiciosLista;

		while(dLM.get(dLM.size()-1).equals("")){
			dLM.remove(dLM.getSize()-1);
		}
		
		for(int i=0;i<dLM.size();i++){
			if(dLM.get(i).toString().contains("Nombre")){
				dLM.remove(i);
				break;
			}
		}
		
		// dLM.addElement("Des");
		
		for(int i=dLM.size()-1;i>= 0;i--){
			System.out.println(dLM.get(i).toString());
		}
        
        
        jScrollServicio.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        Inicio.jLServicios.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        Inicio.jLServicios.setModel(dLM);
        Inicio.jLServicios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Inicio.jLServicios.setSelectedIndex(0);
        jScrollServicio.setViewportView(Inicio.jLServicios);
        Inicio.jLServicios.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				Inicio.utiles.actualizaServicio();
				jPanel1.requestFocus();
			}
		});
        
        jScrollPdfs.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        listaPdfs.setModel(Inicio.modelo);
        jScrollPdfs.setViewportView(listaPdfs);
        
        listaPdfs.addMouseListener(new MouseAdapter(){
        	public void mouseClicked(MouseEvent evt){
       		
        		int pdfNumero = listaPdfs.getSelectedIndex();
        		int numArchivo = pdfNumero;
        		Inicio.numeroPdf = numArchivo;
        		
        		System.out.println("Pdf numero: " + Inicio.numeroPdf + "   " + pdfNumero);
        		
        		int tamañoLista = listaPdfs.getModel().getSize();
        		
        		System.out.println("Tamaño lista: " + tamañoLista);

        		/*
        		if(Inicio.menuVertical){
    				Inicio.ventanaExplorador.listaPdfs.setSelectedIndex(Inicio.numeroPdf);
    			}
        		*/
        		System.out.println("Primer atranco: " + Inicio.numeroPdf + "  " + pdfNumero);
        		
        		if(Inicio.ventanaIntroducirNHC != null){
        			Inicio.ventanaIntroducirNHC.dispose();
        		}
        		
        		// File archivo = new File(Inicio.rutaCompletaPdfs[pdfNumero]);
        		File archivo = new File(Inicio.listaDocumentos[pdfNumero].rutaArchivo);

        		try{
        			if(Inicio.carpetaRecienCargada){
        				Inicio.carpetaRecienCargada = false;
        			}
        			else{
        				new Acrobat().guardarPagina();
        			}
        			
        		/*	
    			   Process p = Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + archivo);
        		*/
        			
        			Desktop.getDesktop().open(archivo);
        			
        			
        			
        			Inicio.jBNHC.setEnabled(true);
        			Inicio.jBNHCp.setEnabled(true);
        			Inicio.jBServicio.setEnabled(true);
        			Inicio.jBServiciop.setEnabled(true);
        			Inicio.jBNombreDoc.setEnabled(true);
        			Inicio.jBNombreDocp.setEnabled(true);
        			
    			   Inicio.jBNHC.setText(Inicio.listaDocumentos[numArchivo].nhc);
    			   Inicio.jBNHCp.setText(Inicio.listaDocumentos[numArchivo].nhc);
    			   if(Inicio.listaDocumentos[numArchivo].nhc.equals("Separador") &&
    					   !Inicio.listaDocumentos[numArchivo].servicio.equals("X")){
    				   Inicio.jBNHC.setBackground(Color.green);
    				   Inicio.jBNHCp.setBackground(Color.green);
    			   }
    			   else if(Inicio.listaDocumentos[numArchivo].nhc.equals("Separador") || Inicio.listaDocumentos[numArchivo].nhc.contains("ERROR") ||
    					   Inicio.listaDocumentos[numArchivo].nhc.equals("NO")){
    				   Inicio.jBNHC.setBackground(Color.red);
    				   Inicio.jBNHCp.setBackground(Color.red);
    			   }
    			   else if(Inicio.listaDocumentos[numArchivo].nhc.equals("Eliminar") ||
    					   Inicio.listaDocumentos[numArchivo].nhc.equals("Apartar")){
    				   Inicio.jBNHC.setBackground(Color.GRAY);
    				   Inicio.jBNHCp.setBackground(Color.GRAY);
    			   }else{
    				   Inicio.jBNHC.setBackground(Color.green);
    				   Inicio.jBNHCp.setBackground(Color.green);
    			   }
    			   
    			   Inicio.jBServicio.setText(Inicio.listaDocumentos[numArchivo].servicio);
    			   if(Inicio.listaDocumentos[numArchivo].servicio.equals("X") ){
    				   Inicio.jBServicio.setBackground(Color.red);
    				   Inicio.jBServiciop.setBackground(Color.red);
    			   }
    			   else if(Inicio.listaDocumentos[numArchivo].servicio.equals("Eliminar") ||
    					   Inicio.listaDocumentos[numArchivo].servicio.equals("Apartar") ){
    				   Inicio.jBServicio.setBackground(Color.GRAY);
    				   Inicio.jBServiciop.setBackground(Color.GRAY);
    			   }
    			   else{
    				   Inicio.jBServicio.setBackground(Color.green);
    				   Inicio.jBServiciop.setBackground(Color.green);
    			   }
 
    			   
    			   Inicio.jBNombreDoc.setText(Inicio.listaDocumentos[numArchivo].nombreNormalizado);
     			   Inicio.jBNombreDocp.setText(Inicio.listaDocumentos[numArchivo].nombreNormalizado);
     			   Inicio.jBNombreDocp.setToolTipText(Inicio.jBNombreDocp.getText());
     			  Inicio.utiles.encajarNombreNormalizado(Inicio.jBNombreDoc.getText());
     			   if(Inicio.listaDocumentos[numArchivo].nombreNormalizado.equals("X") ){
    				   Inicio.jBNombreDoc.setBackground(Color.red);
    				   Inicio.jBNombreDocp.setBackground(Color.red);
    			   }
     			   else if(Inicio.listaDocumentos[numArchivo].nombreNormalizado.equals("Eliminar") ||
     					  Inicio.listaDocumentos[numArchivo].nombreNormalizado.equals("Apartar")){
	   				   Inicio.jBNombreDoc.setBackground(Color.GRAY);
	   				   Inicio.jBNombreDocp.setBackground(Color.GRAY);
	   			   }
    			   else{
    				   Inicio.jBNombreDoc.setBackground(Color.green);
    				   Inicio.jBNombreDocp.setBackground(Color.green);
    			   }
    			   
    			   Inicio.jBNHCp.setText(Inicio.listaDocumentos[numArchivo].nhc);
    			   Inicio.jBServiciop.setText(Inicio.listaDocumentos[numArchivo].servicio);
    			   Inicio.jBNombreDocp.setText(Inicio.listaDocumentos[numArchivo].nombreNormalizado);
    			   Inicio.jBNombreDocp.setToolTipText(Inicio.jBNombreDocp.getText());
    			   Inicio.utiles.encajarNombreNormalizado(Inicio.jBNombreDoc.getText());
    			   
    			   if(Inicio.listaDocumentos[Inicio.numeroPdf].semaforoAmarilloServicio == true){
    				   Inicio.jBServicio.setBackground(Color.yellow);
    				   Inicio.jBServiciop.setBackground(Color.yellow);
    			   }
    			   
    			   if(Inicio.listaDocumentos[Inicio.numeroPdf].semaforoAmarilloNhc == true){
    				   Inicio.jBNHC.setBackground(Color.yellow);
    				   Inicio.jBNHCp.setBackground(Color.yellow);
    			   }
    			   
    			   //   Actualiza al servicio del documento
    			   
    			   Inicio.jLServicios.setSelectedValue(Inicio.jBServicio.getText(), true);
    			   Inicio.jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.jLServicios
    						.getSelectedValue().toString()));
    			   
    			   if(Inicio.listaDocumentos[Inicio.numeroPdf].nhc.equals("NO") || Inicio.listaDocumentos[Inicio.numeroPdf].nhc.contains("ERROR")){
   				   
	    	           try {
						Robot robot = new Robot();
						//robot.delay(1300);
	    	           } catch (AWTException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
	    	           }
	    	           Inicio.ventanaIntroducirNHC = new InterfazIntroducirNHC(null, false, Inicio.jBNHCp);
	    	           Inicio.ventanaIntroducirNHC.setVisible(true);
	    	           
	    	           //dialog.requestFocus();
	    	           // jPanel1.requestFocus();
    			   }
    		   
    			   jPanel1.requestFocus();
    			   
       //			Desktop.getDesktop().open(archivo);
        			Robot robot = new Robot();
        			robot.delay(400);
        			//new Acrobat().getFocus();
        			
        		}catch (Exception e) {
        			System.out.println(e);
        		}
        /*		if((numArchivo+1<tamañoLista)){
        			numArchivo++;
        			listaPdfs.setSelectedIndex(numArchivo);
            		File archivo2 = new File(Inicio.rutaCompletaPdfs[numArchivo]);
            		try{
 //           			Desktop.getDesktop().open(archivo2);
            			
           			    Process p = Runtime.getRuntime()
    					        .exec("rundll32 url.dll,FileProtocolHandler " + archivo2);
            			
            			Robot robot = new Robot();
            			robot.delay(400);
            			//	Ajusta los documentos horizontalmente
        				robot.keyPress(KeyEvent.VK_CONTROL);
        				robot.keyPress(KeyEvent.VK_SHIFT);
        				robot.keyPress(KeyEvent.VK_K);
        				robot.keyRelease(KeyEvent.VK_K);
        				robot.keyRelease(KeyEvent.VK_SHIFT);
        				robot.keyRelease(KeyEvent.VK_CONTROL);
            			
            			
            		}catch (Exception e) {
            			System.out.println(e);
            		}
        			
        		}
         */
        	}
        });
        
        jPanelSuper.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelSuper.setPreferredSize(new java.awt.Dimension(70, 380));
        jPanelSuper.setMaximumSize(new java.awt.Dimension(70, 380));

        Inicio.jBNHC.setText("");
        Inicio.jBNHC.setFont(new java.awt.Font("Serif", 1, 45)); // NOI18N
        Inicio.jBNHC.setPreferredSize(new java.awt.Dimension(100, 23));
        Inicio.jBNHC.setMaximumSize(new Dimension(100,23));
        Inicio.jBNHC.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int seleccion = JOptionPane.showConfirmDialog(Inicio.jBNHC, "¿Es un separador?");
				if(seleccion == 0){
					Inicio.listaDocumentos[Inicio.numeroPdf].nhc = "Separador";
					Inicio.jBNHC.setText("Separador");
					Inicio.jBNHCp.setText("Separador");
					Inicio.jBServicio.setText("X");
					Inicio.jBServiciop.setText("X");
				}
				new FocalAdobe(100);
			}
		});

        Inicio.jBServicio.setText("Servicio");
        Inicio.jBServicio.setFont(new java.awt.Font("Serif", 1, 22)); // NOI18N
        Inicio.jBServicio.setPreferredSize(new java.awt.Dimension(100, 23));
        Inicio.jBServicio.setMaximumSize(new Dimension(100,23));
		Inicio.jBServicio.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				//Icon icono = new ImageIcon(getClass().getResource("/iconos/maletin48x48.png"));
				new FocalAdobe(100);
				Inicio.utiles.ventanaRenombrarServicios();
				jPanel1.requestFocus();
			}

		});
        
        Inicio.jBNombreDoc.setText("Nombre Normalizado");
        Inicio.jBNombreDoc.setPreferredSize(new java.awt.Dimension(100, 23));
        Inicio.jBNombreDoc.setMaximumSize(new Dimension(100,23));
		Inicio.jBNombreDoc.setFont(new java.awt.Font("Serif", 1, 22)); // NOI18N
		Inicio.jBNombreDoc.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				Inicio.utiles.ventanaRenombrarNombres();
				new FocalAdobe(100);
			}

		});
        


        jBFijarServicio.setText("Fijar Serv.");
        jBFijarServicio.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				if(!Inicio.jBServicio.equals("X") && !Inicio.jBServicio.equals(Inicio.DES)){
					Inicio.utiles.renombraServicios();	
					Inicio.jLServicios.setSelectedValue(Inicio.jBServicio.getText(), true);
					if(Inicio.A3 && (Inicio.jBServiciop.getText().equals(Inicio.HOSP) || Inicio.jBServiciop.getText().equals(Inicio.CIA))){
							DefaultListModel modelo = new DefaultListModel();
							modelo.addElement(Inicio.CUIDADOS_INTENSIVOS);
							modelo.addElement(Inicio.URPA);
							modelo.addElement(Inicio.REGISTRO_ANESTESIA);
							
							Inicio.jLNombresDoc.setModel(modelo);
					}
					else{
						Inicio.jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.jBServicio.getText()));
					}
				}
				jPanel1.requestFocus();
				new Acrobat().getFocus();
			}
		});

        jBFijarNombres.setText("Fijar Nom.");
        jBFijarNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	Inicio.utiles.renombraNombres();
            	jPanel1.requestFocus();
            	new Acrobat().getFocus();
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanelFijar);
        jPanelFijar.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jBFijarServicio, 10, 10, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBFijarNombres, 10, 10, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBFijarServicio)
                    .addComponent(jBFijarNombres)))
        );

        // jBFijarServicio.setPreferredSize(new Dimension(10,10));
        // jBFijarNombres.setPreferredSize(new Dimension(10,10));
        
        jBCons.setText(Inicio.CONS);
        jBCons.setBackground(new Color(80,200,120));
        jBCons.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				Inicio.jLServicios.setSelectedValue(Inicio.DES, true);
   				Inicio.utiles.actualizaServicio();
   				jPanel1.requestFocus();
   				new Acrobat().getFocus();
   			}
   		});

        jBHosp.setText(Inicio.HOSP);
        jBHosp.setBackground(new Color(80,200,120));
        jBHosp.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				Inicio.jLServicios.setSelectedValue(Inicio.HOSP, true);
   				/*
   				if(!Inicio.A3){
   					Inicio.jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.HOSP));
   					System.out.println("No a3");
   				}
   				else{
   					DefaultListModel modelo = new DefaultListModel();
   					modelo.addElement(Inicio.CUIDADOS_INTENSIVOS);
   					modelo.addElement(Inicio.URPA);
   					
   					Inicio.jLNombresDoc.setModel(modelo);
   					jScrollNombresDoc.setViewportView(Inicio.jLNombresDoc);
   					System.out.println("Sólo a3");
   				}
   				*/
   				Inicio.utiles.actualizaServicio();
   				jPanel1.requestFocus();
   				new Acrobat().getFocus();
   			}
   		});

        jBCia.setText(Inicio.CIA);
        jBCia.setBackground(new Color(80,200,120));
        jBCia.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				Inicio.jLServicios.setSelectedValue(Inicio.CIA, true);
   				Inicio.jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.CIA));
   				Inicio.utiles.actualizaServicio();
   				jPanel1.requestFocus();
   				new Acrobat().getFocus();
   			}
   		});

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanelHosp);
        jPanelHosp.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jBCons, 10, 10, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBHosp, 10, 10, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCia, 10, 10, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jBCons,javax.swing.GroupLayout.DEFAULT_SIZE, 10, Short.MAX_VALUE)
                .addComponent(jBHosp)
                .addComponent(jBCia))
        );

        jPanelExtraer.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        //jB180.setText("Girar");
        jB180.setIcon(new javax.swing.ImageIcon("iconos/Giro.png")); // NOI18N
		jB180.setToolTipText("Rota la página");
		// jB180.setText("180 º");
		jB180.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				new Acrobat().rotarPagina();
				jPanel1.requestFocus();
				new Acrobat().getFocus();
			}
		});

        //jBGiroDcha.setText("Siguiente");
        jBGiroDcha.setIcon(new javax.swing.ImageIcon(
				"iconos/Giro Derecha 24x24.png")); // NOI18N
		jBGiroDcha.setToolTipText("Documento siguiente");
		jBGiroDcha.setPreferredSize(new Dimension(110,10));
		jBGiroDcha.setMaximumSize(new Dimension(110,10));
		jBGiroDcha.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Inicio.utiles.jBGrabarPagina();
				jPanel1.requestFocus();
				new Acrobat().getFocus();
			}
		});

        jBCarpeta.setIcon(new ImageIcon("iconos/carpeta 32.png"));
        //jBCarpeta.setText("Carpeta");
        jBCarpeta.setToolTipText("Abre la carpeta actual");
        
        jBCarpeta.setPreferredSize(new Dimension(110,10));
        jBGiroDcha.setMaximumSize(new Dimension(110,10));
        
        jBCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	Inicio.utiles.jBCarpetaActionPerformed(evt);
                jPanel1.requestFocus();
                new Acrobat().getFocus();
            }
        });

        //jBEliminar.setIcon(new ImageIcon("Iconos/Cubo Basura32x32.png"));
        jBEliminar.setText("Eliminar");
        // jBEliminar.setFont(new java.awt.Font("Serif", 1, 10));
        jBEliminar.setToolTipText("Elimina el documento");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // jBEliminarActionPerformed(evt);
            	
				Inicio.jBNHC.setText("Eliminar");
				Inicio.jBNHCp.setText("Eliminar");
				Inicio.jBServicio.setText("Eliminar");
				Inicio.jBServiciop.setText("Eliminar");
				Inicio.jBNombreDoc.setText("Eliminar");
				Inicio.jBNombreDocp.setText("Eliminar");
				Inicio.jBNombreDocp.setToolTipText(Inicio.jBNombreDocp.getText());
				Inicio.utiles.encajarNombreNormalizado(Inicio.jBNombreDoc.getText());

				Inicio.jBNHC.setBackground(Color.gray);
				Inicio.jBNHCp.setBackground(Color.gray);
				Inicio.jBServicio.setBackground(Color.gray);
				Inicio.jBServiciop.setBackground(Color.gray);
				Inicio.jBNombreDoc.setBackground(Color.gray);
				Inicio.jBNombreDocp.setBackground(Color.gray);
				
				jPanel1.requestFocus();
				new Acrobat().getFocus();
            }
        });

        //jBApartar.setIcon(new ImageIcon("iconos/Clip32x32.png"));
        jBApartar.setText("Apartar");
        jBApartar.setToolTipText("Aparta el documento");
        
        jBApartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio.utiles.jBApartarActionPerformed(evt);
                jPanel1.requestFocus();
                new Acrobat().getFocus();
            }
        });

        //jBExtraer.setIcon(new javax.swing.ImageIcon("iconos/accept-32.png")); // NOI18N
		jBExtraer.setText("Extraer");
		jBExtraer
				.setToolTipText("Obtiene la ruta y nombre del nuevo archivo, y lo coloca en el portapapeles");
		jBExtraer.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				// jBExtraerActionPerformed(evt);
				
				Inicio.utiles.habilitarTeclas(Inicio.jBDeshabilitar.getText(),Inicio.visualizacion);
				
				if(Inicio.ventanaExtraer != null){
					Inicio.ventanaExtraer.dispose();
				}
				
				Inicio.ventanaExtraer = new VentanaExtraer();
				jPanel1.requestFocus();
			}
		});

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanelExtraer);
        jPanelExtraer.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(/*jB180*/Inicio.jBDeshabilitar, 10, 10, Short.MAX_VALUE)
                    .addComponent(jBEliminar, 10, 10, Short.MAX_VALUE)
                    .addComponent(jBCarpeta, 10, 10, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                	.addComponent(jBGiroDcha, 10, 10, Short.MAX_VALUE)
                	.addComponent(jBApartar, 10, 10, Short.MAX_VALUE)
                	.addComponent(jBExtraer, 10, 10, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(/*jB180*/Inicio.jBDeshabilitar)
                    .addComponent(jBGiroDcha,javax.swing.GroupLayout.PREFERRED_SIZE, 0,
    						Short.MAX_VALUE))
                    //.addComponent(jBCarpeta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBEliminar)
                    .addComponent(jBApartar))
                    //.addComponent(jBCarpeta)
                    //.addComponent(jBExtraer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBCarpeta,javax.swing.GroupLayout.PREFERRED_SIZE, 0,
    						Short.MAX_VALUE)
                    .addComponent(jBExtraer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelExtraer.setPreferredSize(new Dimension(60,120));
        jPanelExtraer.setMaximumSize(new Dimension(60,120));
        
        Inicio.jCheckBox1.setText("Todos");
        Inicio.jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inicio.utiles.jCheckBox1ActionPerformed(evt);
                jPanel1.requestFocus();
            }
        });

        jBGrabar.setIcon(new ImageIcon("iconos/accept-32.png"));
        jBGrabar.setText("Registrar");
        jBGrabar.setToolTipText("Graba todos los cambios de la carpeta");
        jBGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // jBGrabarActionPerformed(evt);
            	Inicio.utiles.registraCambiosFinales();
            	jPanel1.requestFocus();
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanelRegistrar);
        jPanelRegistrar.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Inicio.jCheckBox1)
                .addGap(10, 10, 10)
                .addComponent(jBGrabar, 10, 10, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Inicio.jCheckBox1, 20, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
            .addComponent(jBGrabar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanelSuper);
        jPanelSuper.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Inicio.jBNHC, 220, 220, 220)
            .addComponent(Inicio.jBServicio, 220, 220, 220)
            .addComponent(Inicio.jBNombreDoc, 220, 220, 220)
            .addComponent(jPanelFijar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addComponent(jPanelHosp, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addComponent(jPanelExtraer, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addComponent(jPanelRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Inicio.jBNHC, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inicio.jBServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inicio.jBNombreDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelFijar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelHosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelExtraer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        
        jBAcrobat.setBackground(Color.orange);
		jBAcrobat.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub

				File archivo3 = null;
				archivo3 = new File(Inicio.rutaPreferenciasAdobe);

				try {

					Runtime.getRuntime().exec(
							"rundll32 url.dll,FileProtocolHandler " + archivo3);

				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}
		});
        
        
        jBAnr.setBackground(new java.awt.Color(255, 255, 51));
        jBAnr.setText(Inicio.ANRC);
        jBAnr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	Inicio.jLServicios.setSelectedValue(Inicio.ANRC, true);
   				Inicio.jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.ANRC));
   				Inicio.utiles.actualizaServicio();
   				jPanel1.requestFocus();
            }
        });

        jBCar.setBackground(new java.awt.Color(255, 255, 51));
        jBCar.setText(Inicio.CARC);
        jBCar.addActionListener(new ActionListener() {
			
   			@Override
   			public void actionPerformed(ActionEvent e) {
   				// TODO Auto-generated method stub
   				
   				Inicio.jLServicios.setSelectedValue(Inicio.CARC, true);
   				Inicio.jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.CARC));
   				Inicio.utiles.actualizaServicio();
   				jPanel1.requestFocus();
   			}
   		});

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                //.addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                	.addComponent(jBAcrobat, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jBCar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jBAnr, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                //.addContainerGap()
                    )
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBAcrobat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAnr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCar)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollHab1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jListHabituales1.setBackground(new java.awt.Color(255, 241, 182));
        jListHabituales1.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        if(Inicio.destinoDocumentacion == 0){
        	jListHabituales1.setModel(Inicio.excel.listaHabitualesUrg);
        }else{
        	jListHabituales1.setModel(Inicio.excel.listaHabituales1);
        }
        jListHabituales1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollHab1.setViewportView(jListHabituales1);
        jListHabituales1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
            	listaHabituales1DocMouseClicked(evt);
            	jPanel1.requestFocus();
            }
        });

        jScrollHab2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jListHabituales2.setBackground(new java.awt.Color(255, 241, 182));
        jListHabituales2.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
        jListHabituales2.setModel(Inicio.excel.listaHabituales2);
        jListHabituales2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollHab2.setViewportView(jListHabituales2);
        jListHabituales2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
            	listaHabituales2DocMouseClicked(evt);
            	jPanel1.requestFocus();
            }
        });

        
        Inicio.jLNombresDoc.setBackground(new java.awt.Color(255, 255, 204));
        Inicio.jLNombresDoc.setFont(new java.awt.Font("Serif", 1, 16)); // NOI18N
		if(Inicio.destinoDocumentacion == 0){
	        Inicio.jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.URG));
		}
		else{
	        Inicio.jLNombresDoc.setModel(Inicio.excel.getDocServicio(Inicio.jLServicios.getSelectedValue().toString()));
		}
        Inicio.jLNombresDoc.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Inicio.jLNombresDoc.setBackground(new java.awt.Color(255, 255, 204));
        Inicio.jLNombresDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaNombresDocMouseClicked(evt);
                jPanel1.requestFocus();
            }
        });
        
        //jScrollNombresDoc.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollNombresDoc.setViewportView(Inicio.jLNombresDoc);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanelNombres);
        jPanelNombres.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollHab1)
            .addComponent(jScrollHab2)
            .addComponent(jScrollNombresDoc)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollHab1, 150,150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollHab2, 150, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollNombresDoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollServicio,60,60,60)
                    .addComponent(jPanel6, 60, 60, 60))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelSuper, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jPanelNombres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                	.addComponent(jScrollPdfs,60,60,60))
        		);
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollServicio))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelSuper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelNombres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            //.addGroup(jPanel1Layout.createSequentialGroup()
            		).addComponent(jScrollPdfs)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
        );

       // setSize(90,1000);
        setPreferredSize(new Dimension(360,1150));
        
        pack();
    }// </editor-fold>      
    
    
    //******************************************************  Keylistener


	
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

	protected void listaHabituales1DocMouseClicked(MouseEvent evt) {
		// TODO Auto-generated method stub
		Inicio.jBNombreDoc.setText(jListHabituales1.getSelectedValue()
				.toString());
		Inicio.jBNombreDocp.setText(jListHabituales1.getSelectedValue()
				.toString());
		Inicio.jBNombreDocp.setToolTipText(Inicio.jBNombreDocp.getText());
		Inicio.utiles.encajarNombreNormalizado(Inicio.jBNombreDoc.getText());
		Inicio.jBNombreDoc
				.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDocp
				.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDoc.setIcon(null);
		Inicio.jBNombreDocp.setIcon(null);
		Inicio.jLNombresDoc.clearSelection();
		jListHabituales2.clearSelection();
		
		new FocalAdobe(100);
	}
	
	protected void listaHabituales2DocMouseClicked(MouseEvent evt) {
		// TODO Auto-generated method stub
		
		Inicio.jBNombreDoc.setText(jListHabituales2.getSelectedValue().toString());
		Inicio.jBNombreDocp.setText(jListHabituales2.getSelectedValue().toString());
		Inicio.jBNombreDocp.setToolTipText(Inicio.jBNombreDocp.getText());
		Inicio.utiles.encajarNombreNormalizado(Inicio.jBNombreDoc.getText());
		Inicio.jBNombreDoc.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDocp.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDoc.setIcon(null);
		Inicio.jBNombreDocp.setIcon(null);
		jListHabituales1.clearSelection();
		Inicio.jLNombresDoc.clearSelection();
		
		new FocalAdobe(100);
	}
	
	protected void listaNombresDocMouseClicked(MouseEvent evt) {
		// TODO Auto-generated method stub
		
		Inicio.jBNombreDoc.setText(Inicio.jLNombresDoc.getSelectedValue().toString());
		Inicio.jBNombreDocp.setText(Inicio.jLNombresDoc.getSelectedValue().toString());
		Inicio.jBNombreDocp.setToolTipText(Inicio.jBNombreDocp.getText());
		Inicio.utiles.encajarNombreNormalizado(Inicio.jBNombreDoc.getText());
		Inicio.jBNombreDoc.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDocp.setBackground(new java.awt.Color(153, 255, 153));
		Inicio.jBNombreDoc.setIcon(null);
		Inicio.jBNombreDocp.setIcon(null);
		jListHabituales1.clearSelection();
		jListHabituales2.clearSelection();
		
		new FocalAdobe(100);
	}
    
    private void abrirCarpetaConVisualizacion(ActionEvent evento, int visualizacion){
		
    	/*
    	 * 	visualización:	0	Menú grande
    	 * 					1	Menú vertical
    	 * 					2	Menú A3
    	 * 					3	Menú sólo NHC
    	 */
     	
    	VentanaExplorador.triggerVigo = false;
		
	//	VentanaInicioProgreso vp = new VentanaInicioProgreso();
		//vp.setVisible(false);
		 
		CargaListaPdfs pdfs = new CargaListaPdfs(true);
		
		//vp.setVisible(true);
		
		
		if(pdfs.cargado == true){
			
			int tamaño = pdfs.nombrePdfs.length;
			int aux = pdfs.ficheros.length;
			/*
			 Inicio.modelo = new DefaultListModel();
			Inicio.modelo.addElement("Cargando...");
			listaPdfs.setModel(Inicio.modelo);
			*/
			
	
			
			VentanaProgreso vprogreso = new VentanaProgreso(pdfs, visualizacion);

			
		}
    }
	
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaIntegral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaIntegral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaIntegral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaIntegral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaIntegral().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     

    private javax.swing.JButton jBGiroDcha;
    private javax.swing.JButton jBCarpeta;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBApartar;
    private javax.swing.JButton jBExtraer;
    private javax.swing.JButton jBAnr;
    private javax.swing.JButton jBCar;
    private javax.swing.JButton jBGrabar;

    private javax.swing.JButton jBFijarServicio;
    private javax.swing.JButton jBFijarNombres;
    private javax.swing.JButton jBCons;
    private javax.swing.JButton jBHosp;
    private javax.swing.JButton jBCia;
    private javax.swing.JButton jB180;

    private javax.swing.JList jListHabituales1;
    private javax.swing.JList jListHabituales2;
    private javax.swing.JList jList4;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelSuper;
    private javax.swing.JPanel jPanelFijar;
    private javax.swing.JPanel jPanelHosp;
    private javax.swing.JPanel jPanelExtraer;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelRegistrar;
    private javax.swing.JPanel jPanelNombres;
    private javax.swing.JScrollPane jScrollServicio;
    private JScrollPane jScrollPdfs;
    private javax.swing.JScrollPane jScrollHab1;
    private javax.swing.JScrollPane jScrollHab2;
    private javax.swing.JScrollPane jScrollNombresDoc;
    
    public JList listaPdfs = new JList();
    // End of variables declaration          
    
    private javax.swing.JMenuBar jBarraMenu;
    private javax.swing.JMenu jMenuRevisar;
    private JMenuItem jMenuVentanaHorizontal;
    private JMenuItem jMenuVentanaVertical;
        
    private JMenu jMenuFirmar;
    private JMenuItem jMenuItemFirmar;
    
    private JMenu jMenuAyuda;
    private JMenuItem jAyudaServicio;
    private JMenuItem jAyudaPalabrasClave;
    private JMenuItem jAyudaNombreDocumento;
    
    public KeyListener listener = new KeyListener() {
		@Override
		public void keyTyped(KeyEvent e) {
			System.out.println("keyTyped="
					+ KeyEvent.getKeyText(e.getKeyCode()));
		}

		@Override
		public void keyPressed(KeyEvent e) {
			System.out.println("keyPressed="
					+ KeyEvent.getKeyText(e.getKeyCode()));
		}

		@Override
		public void keyReleased(KeyEvent e) {

			System.out.println(e.getKeyText(e.getKeyCode()));
			System.out.println(e.getKeyCode());
			
			
			switch (e.getKeyCode()) {
			
			case KeyEvent.VK_F:
			case KeyEvent.VK_W:
				
				if(Inicio.ventanaIntroducirNHC != null){
        			Inicio.ventanaIntroducirNHC.dispose();
        		}
	/***********************************
	   			 if(Inicio.listaDocumentos[Inicio.numeroPdf].nhc.equals("NO") || Inicio.listaDocumentos[Inicio.numeroPdf].nhc.contains("ERROR")){
	   				   
	    	           try {
						Robot robot = new Robot();
						robot.delay(100);
						
		    	           Inicio.ventanaIntroducirNHC = new InterfazIntroducirNHC(null, true, Inicio.jBNHCp);
		    	           Inicio.ventanaIntroducirNHC.setVisible(true);
		    	           		    	           
		    	   		if (!Inicio.listaDocumentos[Inicio.numeroPdf].nhc.equals(Inicio.jBNHCp
		    					.getText())) {
		    				// System.out.println("Cambiamos el nhc");
		    				Inicio.listaDocumentos[Inicio.numeroPdf].nhc = Inicio.jBNHCp
		    						.getText();
		    				Inicio.listaDocumentos[Inicio.numeroPdf].revisado = true;
		    			}
		    	           
	    	           } catch (AWTException ev) {
						// TODO Auto-generated catch block
						ev.printStackTrace();
	    	           }

	    	           
	    	           //dialog.requestFocus();
	    	           // jPanel1.requestFocus();
    			   }
	   			 else{
	********************************************/
	 	   			Inicio.utiles.jBGrabarPagina(); 
	 	   			
	 	   			
	   			 // } 

				break;
			case KeyEvent.VK_R:
				
				// System.out.println("Hola estoy pulsando la r en la ventana compacta");
				
				new Acrobat().rotarPagina();
				if ((Inicio.jBServicio.getText().equals(Inicio.CARC) || Inicio.jBServicio
						.getText().equals(Inicio.ANRC))
						&& Inicio.jBNombreDoc.getText().equals("X")) {
					// if(Inicio.listaDocumentos[Inicio.numeroPdf].fisica.numPaginas
					// <= 2){
					Inicio.jBNombreDocp.setText(Inicio.EKG);
					Inicio.jBNombreDocp.setToolTipText(Inicio.jBNombreDocp.getText());
					Inicio.utiles.encajarNombreNormalizado(Inicio.jBNombreDoc.getText());
					Inicio.jBNombreDoc.setText(Inicio.EKG);
					if(Inicio.destinoDocumentacion == 0){
						Inicio.jBServiciop.setText("URG");
						Inicio.jBServicio.setText("URG");
					}else{
						Inicio.jBServiciop.setText(Inicio.CARC);
						Inicio.jBServicio.setText(Inicio.CARC);
					}
					Inicio.jBNombreDocp.setBackground(Color.green);
					Inicio.jBNombreDoc.setBackground(Color.green);
					// }
				}
				break;
			case KeyEvent.VK_E:
				new Acrobat().eliminarPagina();
				break;
			case KeyEvent.VK_Q:
				
				System.out.println("Hola estoy pulsando la q en la ventana compacta");
				
				if(Inicio.ventanaIntroducirNHC != null){
					Inicio.ventanaIntroducirNHC.dispose();
				}
				
				
				Inicio.ventanaIntroducirNHC = new InterfazIntroducirNHC(null,true, Inicio.jBNHCp);
				Inicio.ventanaIntroducirNHC.setVisible(true);
				break;
				
  			case KeyEvent.VK_SPACE:  
  				System.out.println("Hola estoy pulsando la barra espaciadora en la ventana compacta");
  				
  				if(Inicio.ventanaIntroducirNHC != null){
  	  				Inicio.ventanaIntroducirNHC.validarNHC(Inicio.ventanaIntroducirNHC.jBNHCAnterior.getText());
  	  				Inicio.ventanaIntroducirNHC.dispose();
  	  				new FocalAdobe(100);
  	  				break;	
  				}
  				
/*********************

  			case KeyEvent.VK_0:
  			case KeyEvent.VK_1:
  			case KeyEvent.VK_2:
  			case KeyEvent.VK_3:
  			case KeyEvent.VK_4:
  			case KeyEvent.VK_5:
  			case KeyEvent.VK_6:
  			case KeyEvent.VK_7:
  			case KeyEvent.VK_8:
  			case KeyEvent.VK_9:
 				String cadena = Inicio.ventanaIntroducirNHC.jTFnhc.getText();
  				cadena += e.getKeyText(e.getKeyCode());
  				Inicio.ventanaIntroducirNHC.jTFnhc.setText(cadena);
  				break;
  				
  			case KeyEvent.VK_NUMPAD0:
  			case KeyEvent.VK_NUMPAD1:
  			case KeyEvent.VK_NUMPAD2:
  			case KeyEvent.VK_NUMPAD3:
  			case KeyEvent.VK_NUMPAD4:
  			case KeyEvent.VK_NUMPAD5:
  			case KeyEvent.VK_NUMPAD6:
  			case KeyEvent.VK_NUMPAD7:
  			case KeyEvent.VK_NUMPAD8:
  			case KeyEvent.VK_NUMPAD9:
  				String cadenaBloqNum = Inicio.ventanaIntroducirNHC.jTFnhc.getText();
  				String cadenaExtraida = e.getKeyText(e.getKeyCode());
  				cadenaBloqNum += cadenaExtraida.substring(7);
  				Inicio.ventanaIntroducirNHC.jTFnhc.setText(cadenaBloqNum);
  				break;
  				
**********************/
    
			case KeyEvent.VK_ESCAPE: // cerrarAutoHotKey() 
				;
				break;
			}

			// if(e.getKeyCode() == KeyEvent.VK_A )

			// System.out.println("keyReleased="+KeyEvent.getKeyText(e.getKeyCode()));
		}
	};;
}
